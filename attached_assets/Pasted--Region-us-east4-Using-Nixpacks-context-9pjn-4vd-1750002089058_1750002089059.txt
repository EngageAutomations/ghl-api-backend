 

[Region: us-east4]

==============

Using Nixpacks

==============


context: 9pjn-4vdh

╔════════ Nixpacks v1.38.0 ═══════╗

║ setup      │ nodejs_22, npm-9_x ║

║─────────────────────────────────║

║ install    │ npm i              ║

║─────────────────────────────────║

║ start      │ npm run start      ║

╚═════════════════════════════════╝

[internal] load build definition from Dockerfile

[internal] load build definition from Dockerfile  ✔ 0ms

[internal] load build definition from Dockerfile

[internal] load build definition from Dockerfile  ✔ 15ms

[internal] load metadata for ghcr.io/railwayapp/nixpacks:ubuntu-1745885067

[internal] load metadata for ghcr.io/railwayapp/nixpacks:ubuntu-1745885067  ✔ 47ms

[internal] load .dockerignore

[internal] load .dockerignore  ✔ 0ms

[internal] load .dockerignore

[internal] load .dockerignore  ✔ 12ms

[stage-0 3/8] COPY .nixpacks/nixpkgs-ffeebf0acf3ae8b29f8c7049cd911b9636efd7e7.nix .nixpacks/nixpkgs-ffeebf0acf3ae8b29f8c7049cd911b9636efd7e7.nix

[internal] load build context

[stage-0 2/8] WORKDIR /app/

[stage-0 1/8] FROM ghcr.io/railwayapp/nixpacks:ubuntu-1745885067@sha256:d45c89d80e13d7ad0fd555b5130f22a866d9dd10e861f589932303ef2314c7de

[stage-0 8/8] COPY . /app

[stage-0 7/8] RUN printf '\nPATH=/app/node_modules/.bin:$PATH' >> /root/.profile

[stage-0 6/8] RUN --mount=type=cache,id=s/476168e2-260c-4e53-ba7d-94e4cfd9bdb3-/root/npm,target=/root/.npm npm i

[stage-0 5/8] COPY . /app/.

[stage-0 4/8] RUN nix-env -if .nixpacks/nixpkgs-ffeebf0acf3ae8b29f8c7049cd911b9636efd7e7.nix && nix-collect-garbage -d

[stage-0 1/8] FROM ghcr.io/railwayapp/nixpacks:ubuntu-1745885067@sha256:d45c89d80e13d7ad0fd555b5130f22a866d9dd10e861f589932303ef2314c7de

[internal] load build context  ✔ 0ms

[internal] load build context

[stage-0 1/8] FROM ghcr.io/railwayapp/nixpacks:ubuntu-1745885067@sha256:d45c89d80e13d7ad0fd555b5130f22a866d9dd10e861f589932303ef2314c7de  ✔ 11ms

[internal] load build context  ✔ 17ms

[stage-0 2/8] WORKDIR /app/  ✔ 0ms – CACHED

[stage-0 3/8] COPY .nixpacks/nixpkgs-ffeebf0acf3ae8b29f8c7049cd911b9636efd7e7.nix .nixpacks/nixpkgs-ffeebf0acf3ae8b29f8c7049cd911b9636efd7e7.nix  ✔ 0ms – CACHED

[stage-0 4/8] RUN nix-env -if .nixpacks/nixpkgs-ffeebf0acf3ae8b29f8c7049cd911b9636efd7e7.nix && nix-collect-garbage -d  ✔ 0ms – CACHED

[stage-0 5/8] COPY . /app/.  ✔ 0ms – CACHED

[stage-0 6/8] RUN --mount=type=cache,id=s/476168e2-260c-4e53-ba7d-94e4cfd9bdb3-/root/npm,target=/root/.npm npm i

npm warn config production Use `--omit=dev` instead.


added 75 packages, and audited 76 packages in 5s


14 packages are looking for funding

  run `npm fund` for details


found 0 vulnerabilities

[stage-0 6/8] RUN --mount=type=cache,id=s/476168e2-260c-4e53-ba7d-94e4cfd9bdb3-/root/npm,target=/root/.npm npm i  ✔ 5s

[stage-0 7/8] RUN printf '\nPATH=/app/node_modules/.bin:$PATH' >> /root/.profile

[stage-0 7/8] RUN printf '\nPATH=/app/node_modules/.bin:$PATH' >> /root/.profile  ✔ 102ms

[stage-0 8/8] COPY . /app

[stage-0 8/8] COPY . /app  ✔ 14ms

exporting to docker image format

exporting to image

[auth] sharing credentials for production-us-east4-eqdc4a.railway-registry.com
