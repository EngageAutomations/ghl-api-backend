1. Environment & Configuration
Scopes & App Settings

Have you confirmed that the process.env.GHL_SCOPES (or marketplace app settings) now include exactly users.read alongside your other scopes?

In the GoHighLevel developer console, is your OAuth app’s scope list updated to match (and have you re-authorized the app if it changed)?

Redirect URIs & Domains

Are the production redirect URLs (/?oauth_success=true&installation_id=…) whitelisted in both Railway and GoHighLevel?

If you have separate staging and prod apps, have you double-checked you’re pointing at the right client ID/secret and redirect URI for each?

Environment Variables

Does your Railway deploy have the updated GHL_SCOPES, GHL_USERINFO_URL (https://services.leadconnectorhq.com/v1/users/me), and the correct client credentials?

Have you cleared any old in-process caches or restarted dynos so the new env vars actually take effect?

2. Token & Endpoint Validation
Manual Token Test

Do you have a “golden” access token on hand to curl the /v1/users/me endpoint directly, to confirm it returns profile data?

Token Refresh Path

If you force-expire that token, does your refresh logic kick in automatically and then succeed on a second call to /v1/users/me?

How does your code behave if the refresh endpoint itself returns a non-200? (make sure you’ll see a clear error in your logs)

Error Responses

Have you triggered every failure mode—missing scope, invalid token, expired token—to ensure your JSON errors ({ error: 'user_info_failed', message: … }) are descriptive enough?

3. Frontend Integration
Installation ID Propagation

When you arrive at your React app’s OAuthSuccess handler, are you actually reading the installation_id from the URL or localStorage in every browser you support?

Have you tested the “Try Again” flow (user cancels then retries) to ensure old IDs aren’t clobbered or mismatched?

Cookie / CORS

If you’re using credentials: 'include', can your browser console confirm that the session cookie is set and sent on your /api/oauth/status call?

Are there any CORS errors or “blocked from frame” messages in an embedded CRM tab scenario?

4. End-to-End & Regression
Fresh-Install Clean Slate

Does a brand-new GoHighLevel account (with zero previous OAuth installs) flow cleanly through auth→callback→status, and end up in a blank dashboard?

Multi-Tenant Isolation

If two users authenticate in the same browser (or two browser windows), can each still fetch only their own user info?

Full Listing Workflow

After fixing user-info, walk through creating a listing: does the UI still fetch the fresh profile, then allow listing creation and show it under the correct GHL account?

5. Observability & Monitoring
Log Verification

Are you seeing clear log entries for each step—scope negotiation, /v1/users/me request, token refresh attempts?

Have you set alerts on error codes (403, 401) for the user-info endpoint so you’ll get notified immediately if something slips through?

Smoke Test Automation

Do you have a smoke-test script (e.g., Cypress or a simple Postman collection) that replicates the entire OAuth + user-info + listing-creation flow?

By confirming each of those points ahead of time—scopes, endpoints, tokens, cookies, multi-tenant behavior, and logging—you’ll reduce surprises and make your next test run a reliable “green.” Let me know if you need any sample curl commands or test scripts to automate these checks!