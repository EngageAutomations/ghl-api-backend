Thanks for the detailed and clear report — you're very close to solving this.

Based on everything you've tried and the symptoms you're seeing (✅ OAuth code received but ❌ 404 on callback), the issue is now 99% likely caused by one of the following final blockers:

🔎 Final Suspects Checklist
✅ 1. Frontend Still Handling the Request
Despite moving the route to the top of server/index.ts, something may still be intercepting the route before Express processes it.

Ask your Replit agent:

🧠 “Are we calling app.use('*', serveStatic) or any React/Vite catch-all route before our API routes?”

You need to ensure this runs after all your API handlers:

ts
Copy
Edit
app.use('*', serveFrontend); // ← Must come *after* /api/oauth/callback
✅ 2. Static Host/Proxy Behavior
If your app is being deployed via Replit, Vercel, or Netlify:

Requests may be served from the frontend's static folder, not passed to your backend

In that case, you may need to set up proxy rules or serverless routing

Ask your agent:

🔥 “Is the production environment serving the app from a Node server (Express), or is it behind a static hosting layer like Vite Preview or Vercel static hosting?”

If it's static-hosted and /api/* isn't proxied, you’ll never hit your Express routes.

✅ 3. Missing .replit or replit.nix Configuration (Replit-specific)
Replit sometimes defaults to frontend preview mode if .replit isn’t configured to launch an Express server.

✅ Ask: “Can you confirm our .replit file starts the correct backend server — not just a Vite preview?”

✅ 4. Log It for Real
Log in the handler to prove it’s hit:

ts
Copy
Edit
app.get(['/api/oauth/callback', '/oauth/callback'], (req, res) => {
  console.log('✅ Callback route reached with code:', req.query.code);
  res.send('OAuth callback hit successfully');
});
Then visit:

ruby
Copy
Edit
https://dir.engageautomations.com/api/oauth/callback?code=TEST123
If you don’t see the log or get a response — the request is never reaching your backend.

✅ Absolute Fix Recommendation
If you're on Replit, do this:

🛠️ In .replit:
ini
Copy
Edit
run = "node server/index.js"
In server/index.js (or .ts):
Make sure this order is exact:

ts
Copy
Edit
const express = require('express');
const app = express();

// ✅ Handle OAuth before anything else
app.get(['/api/oauth/callback', '/oauth/callback'], (req, res) => {
  console.log('✅ Callback route reached with code:', req.query.code);
  res.send('OAuth callback hit successfully');
});

// Other API routes here...

// ❌ Make sure this is LAST
app.use('*', (req, res) => {
  res.sendFile(path.join(__dirname, '../client/dist/index.html'));
});

app.listen(3000, () => console.log('Server running on port 3000'));