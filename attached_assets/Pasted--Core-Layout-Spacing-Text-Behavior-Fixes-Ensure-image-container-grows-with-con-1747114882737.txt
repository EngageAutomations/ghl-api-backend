/* --- Core Layout, Spacing & Text Behavior Fixes --- */

/* Ensure image container grows with content */
.hl-product-image-container {
    min-height: 1200px !important;
}

/* Ensure description shows full content without truncation or collapse */
#description {
    max-height: none !important;
    overflow: visible !important;
    margin-bottom: 60px;
}

/* Add spacing between product image and description section */
div.c-product-details {
    margin-top: 60px !important;
}

/* Remove truncation and ellipsis from product name */
.hl-product-detail-product-name {
    width: 900px !important;
    display: block;
    white-space: normal !important;
    overflow: visible !important;
    text-overflow: unset !important;
}

/* Globally override truncation utility class */
.truncate-text {
    white-space: normal !important;
    overflow: visible !important;
    text-overflow: unset !important;
}

/* Remove built-in "Show More" button */
.show-more {
    display: none !important;
}


/* --- URL Action Button Styling --- */
.directory-action-button {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    background-color: #080623;
    color: #ff0000;
    border-radius: 6px;
    padding: 0.5rem 1rem;
    font-size: 0.875rem;
    font-weight: 500;
    cursor: pointer;
    transition: all 150ms cubic-bezier(0.4, 0, 0.2, 1);
    border: none;
    margin-top: 1rem;
    text-decoration: none;
}

.directory-action-button:hover {
    opacity: 0.9;
}

/* Position for the action button */
.directory-action-container {
    display: flex;
    justify-content: flex-start;
    margin: 1.5rem 0;
}

/* Slug-based selector styling for listing-specific buttons */
[data-listing-slug] .directory-action-button {
    /* Apply default styles from above plus any listing-specific attributes */
    display: inline-flex !important;
}

/* Common category-based styling examples */
[data-listing-category="electronics"] .directory-action-button {
    background-color: #2563eb !important; /* Adjust for electronics */
}

[data-listing-category="clothing"] .directory-action-button {
    background-color: #7c3aed !important; /* Adjust for clothing */
}

[data-listing-category="home-decor"] .directory-action-button {
    background-color: #0d9488 !important; /* Adjust for home decor */
}


/* ==========================================================================
   URL Slug-Based Listing Association System (JavaScript Only - No CSS Required)
   ========================================================================== */

/*
   This system extracts the product slug from the URL and uses it for functional purposes only:
   1. Applying UTM parameters to links and forms
   2. Adding correct direct download links to buttons
   3. Customizing URLs based on the current product
   
   Example URL: https://example.com/product-details/product/product-name
   The slug would be: product-name
   
   To implement this system, add the following JavaScript to your site:
*/

<script>
  // Extract product slug from URL
  function getProductSlug() {
    const path = window.location.pathname;
    const match = path.match(/\/product-details\/product\/([^\/]+)/);
    return match ? match[1] : '';
  }
  
  // Apply UTM parameters and handle forms/downloads
  function applyProductTrackingParameters() {
    const slug = getProductSlug();
    if (!slug) return;
    
    // 1. Apply to all links on the page
    document.querySelectorAll('a').forEach(link => {
      if (!link.href.includes('utm_')) {
        const separator = link.href.includes('?') ? '&' : '?';
        link.href = link.href + separator + 'utm_source=directory&utm_medium=product&utm_campaign=' + slug;
      }
    });
    
    // 2. Handle download buttons
    document.querySelectorAll('.download-button').forEach(button => {
      button.addEventListener('click', (e) => {
        e.preventDefault();
        const baseDownloadUrl = button.getAttribute('data-download-url') || '';
        if (baseDownloadUrl) {
          window.location.href = baseDownloadUrl + '?product=' + slug;
        }
      });
    });
    
    // 3. Handle forms - add hidden fields for tracking
    document.querySelectorAll('form').forEach(form => {
      // Add hidden field for product tracking
      const hiddenField = document.createElement('input');
      hiddenField.type = 'hidden';
      hiddenField.name = 'product_slug';
      hiddenField.value = slug;
      form.appendChild(hiddenField);
    });
  }
  
  // Run when DOM is ready
  document.addEventListener('DOMContentLoaded', applyProductTrackingParameters);
</script>