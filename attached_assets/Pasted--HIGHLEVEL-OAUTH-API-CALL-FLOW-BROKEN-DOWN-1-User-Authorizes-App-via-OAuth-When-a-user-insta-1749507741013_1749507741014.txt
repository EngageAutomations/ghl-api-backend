🔧 HIGHLEVEL OAUTH API CALL FLOW — BROKEN DOWN
1. 🔁 User Authorizes App via OAuth
When a user installs your app from the Marketplace:

HighLevel sends them to:

arduino
Copy
Edit
https://api.leadconnectorhq.com/oauth/authorize
  ?response_type=code
  &client_id=YOUR_CLIENT_ID
  &redirect_uri=YOUR_REDIRECT_URI
  &scope=contacts.read contacts.write ...
  &state=SOME_TOKEN
The user logs in and clicks “Authorize”.

2. 📥 You Receive Authorization Code
HighLevel redirects the user to your app:

perl
Copy
Edit
https://your-app.com/oauth/callback?code=ABC123&state=TOKEN
This code is short-lived and must be exchanged immediately.

3. 🔑 Exchange Code for Access + Refresh Token
You make a server-side POST request:

http
Copy
Edit
POST https://services.leadconnectorhq.com/oauth/token
Content-Type: application/x-www-form-urlencoded

client_id=YOUR_CLIENT_ID
&client_secret=YOUR_CLIENT_SECRET
&grant_type=authorization_code
&code=ABC123
&redirect_uri=YOUR_REDIRECT_URI
✅ You get back:
json
Copy
Edit
{
  "access_token": "xyz123",
  "refresh_token": "abc456",
  "expires_in": 3600,
  "locationId": "LOC_ID",
  "userId": "USER_ID"
}
4. 🔐 Make Authenticated API Calls
Use the access_token in the Authorization header for all API requests:

http
Copy
Edit
GET https://services.leadconnectorhq.com/products/
Authorization: Bearer xyz123
Use locationId in the body or query params when required.

5. 🔁 Refresh Expired Token
When your access_token expires:

http
Copy
Edit
POST https://services.leadconnectorhq.com/oauth/token
Content-Type: application/x-www-form-urlencoded

client_id=YOUR_CLIENT_ID
&client_secret=YOUR_CLIENT_SECRET
&grant_type=refresh_token
&refresh_token=abc456
→ You get a new access_token and optionally a new refresh_token.

🔁 TOKEN HANDLING FLOW DIAGRAM (TEXTUAL)
csharp
Copy
Edit
[User Clicks Install] 
     ↓
[OAuth Redirect to HighLevel]
     ↓
[User Authorizes]
     ↓
[HighLevel Redirects Back with `code`]
     ↓
[Your Server: Exchange `code` → `access_token` + `refresh_token`]
     ↓
[Store tokens + locationId]
     ↓
[Make Authenticated API Calls using `access_token`]
     ↓
[Refresh Token as Needed]
⚠️ DON’T DO:
❌ Don’t try to grab their API key

❌ Don’t expose tokens in frontend

❌ Don’t store tokens insecurely

✅ DO:
✅ Securely store access_token, refresh_token, and locationId in a database

✅ Use Bearer access_token in all authenticated API calls

✅ Track token expiry and refresh as needed

