Absolutely. Here‚Äôs a complete overview of your slug-based GoHighLevel embed integration system ‚Äî including how the slug is handled, listing data is fetched, fields are mapped, parameters are injected, and the final iframe is generated dynamically for tracking and prefill.

‚úÖ SYSTEM OVERVIEW: Slug-Based GHL Form Embed with Dynamic Prefill
üéØ Purpose
To generate a dynamic GoHighLevel form embed that auto-prefills fields based on the current URL slug and listing data, while including UTM tracking and custom field values for full attribution.

üß© Key Components
1. URL Slug Extraction
js
Copy
Edit
const url = new URL(window.location.href);
const slug = url.searchParams.get("slug") || window.location.pathname.split("/").pop();
Supports both: ?slug=... override or automatic extraction from URL like /product-details/product/best-crm-tool

2. Listing Data Fetching
js
Copy
Edit
const res = await fetch(`https://your-replit-api.com/api/listings/${slug}`);
const listing = await res.json();
Uses your getListingBySlug() logic from Replit

Returns fields like title, category, slug, embedFormUrl, etc.

3. Parameter Mapping
js
Copy
Edit
const fields = {
  listing_title: listing.title,
  listing_id: listing.slug,
  category: listing.category,
  utm_source: "directory",
  utm_campaign: listing.directoryName,
};
You can include standard UTM parameters and custom GHL fields

These values will be injected into both the page URL (for GHL detection) and the iframe (for consistency)

4. Inject Parameters into Page URL
js
Copy
Edit
const searchParams = new URLSearchParams(window.location.search);
for (const [key, value] of Object.entries(fields)) {
  searchParams.set(key, value);
}
window.history.replaceState({}, "", window.location.pathname + "?" + searchParams.toString());
GHL forms rely on these being in window.location.search

üß± Final Output: Generated Iframe Embed Script
Here is the full embed code:

html
Copy
Edit
<script>
(async () => {
  const url = new URL(window.location.href);
  const slug = url.searchParams.get("slug") || window.location.pathname.split("/").pop();

  if (!slug) return;

  const res = await fetch(`https://your-replit-api.com/api/listings/${slug}`);
  const listing = await res.json();

  const fields = {
    listing_title: listing.title,
    listing_id: listing.slug,
    category: listing.category,
    utm_source: "directory",
    utm_campaign: listing.directoryName,
  };

  // Update page URL for GHL parameter scraping
  const searchParams = new URLSearchParams(window.location.search);
  for (const [key, value] of Object.entries(fields)) {
    searchParams.set(key, value);
  }
  window.history.replaceState({}, "", window.location.pathname + "?" + searchParams.toString());

  // Create and inject iframe
  const iframe = document.createElement("iframe");
  iframe.src = listing.embedFormUrl || "https://link.engageautomations.com/widget/form/YOUR_FORM_ID";
  iframe.style = "width:100%;height:100%;border:none;border-radius:3px";
  iframe.title = "Listing Contact Form";
  iframe.id = "listing-contact-form";

  document.body.appendChild(iframe);

  // Load GHL embed script
  const ghlScript = document.createElement("script");
  ghlScript.src = "https://link.engageautomations.com/js/form_embed.js";
  document.body.appendChild(ghlScript);
})();
</script>
üìù Optional Enhancements
Add loading indicator while fetching listing

Support form override from query (?form=https://...)

Track form load or CTA clicks via analytics hooks

Let users configure which fields should be injected via UI