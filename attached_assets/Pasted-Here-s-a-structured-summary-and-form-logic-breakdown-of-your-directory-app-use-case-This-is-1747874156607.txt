Here’s a **structured summary** and **form logic breakdown** of your directory app use case. This is optimized for sending to your `repl.agents` team:

---

## **Directory App Use Case Overview**

The Directory App integrates with Go HighLevel's e-commerce store and allows users to configure directory listings through a guided setup wizard. Each directory can have customizable **opt-in methods** and **display components**.

### **Wizard Configuration Options**

---

### 1. **Action Button Opt-In (Choose 1 of 3)**

* **Pop-up Form**: Opens a popup iframe with a pre-configured form.

  * Requires: Form URL (GoHighLevel)
  * Injected via: `[popup]` short tag
* **URL Link**: Button redirects to an external URL.

  * Requires: Valid URL
* **Download Button**: Automatically downloads a file.

  * Requires: Google Drive/Dropbox URL
  * App converts to direct-download URL
* **Styling Options**: Button color, text color, border radius

---

### 2. **Embedded Form Opt-In**

* Embeds the same form into every listing.
* Requires: GoHighLevel Form URL
* App injects iframe and tracks via UTM `?slug={listingSlug}`

---

### 3. **Expanded Description**

* Optional rich text and image section per listing.
* Requires: Rich text field on listing form.

---

### 4. **Google Maps Widget**

* Displays listing location on a map.
* Requires: Address field on listing form.

---

### 5. **Metadata Bar**

* Displays up to 5 custom metadata items with icons per listing.
* Each item is a label + icon.
* Requires: Up to 5 metadata fields added to the listing form dynamically.

---

## **Form Logic & Dynamic Generation**

After configuration, a dynamic listing upload form is generated based on the selected options.

### **Dynamic Form Behavior**

| Config Option            | Form Field Requirement                                  |
| ------------------------ | ------------------------------------------------------- |
| Action Button (Popup)    | Field for Popup Form URL                                |
| Action Button (URL)      | Field for External URL                                  |
| Action Button (Download) | Field for File URL                                      |
| Embedded Form            | No per-listing field; form is global                    |
| Expanded Description     | Rich text field with text + image support               |
| Google Maps Widget       | Address field (autocompleted if possible)               |
| Metadata Bar (Enabled)   | 1–5 text input fields, labeled based on metadata config |

### **Conditional Form Field Logic**

* The app stores config state (e.g., `actionType`, `showMap`, `enableMetadata`, etc.)
* Based on this, the listing upload form is constructed with:

  * Required fields for selected opt-ins
  * Optional fields for visual components (maps, metadata, etc.)
  * Up to 5 metadata fields rendered dynamically, labeled with user input from wizard
  * Validation only enforces required fields based on enabled components

---

## **Example Dynamic Form Outcomes**

**Example 1:**

* Selected: Pop-up Form + Expanded Description + Google Map + 3 Metadata Fields
* Form shows:

  * Popup Form URL
  * Rich Text Description
  * Address Field
  * 3 Metadata Fields (user-labeled)

**Example 2:**

* Selected: Download Button + Metadata Bar (2 items)
* Form shows:

  * File URL (converted on submit)
  * 2 Metadata Fields (user-labeled)

---

Let me know if you'd like me to generate a flowchart or code pseudostructure for the form logic.
